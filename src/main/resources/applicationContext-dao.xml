<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 引入配置文件 -->    
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
	 	<!-- 数据库基本信息配置 -->  
       <property name = "url" value = "${jdbc.url}" />    
       <property name = "username" value = "${jdbc.username}" />    
       <property name = "password" value = "${jdbc.password}" />    
       <property name = "driverClassName" value = "${jdbc.driverClassName}" />    
        <!-- 最大并发连接数 -->  
       <property name = "maxActive" value = "${jdbc.maxActive}" />  
       <!-- 初始化连接数量 -->  
       <property name = "initialSize" value = "${jdbc.initialSize}" />  
       <!-- 配置获取连接等待超时的时间 -->  
       <property name = "maxWait" value = "${jdbc.maxWait}" />  
       <!-- 最小空闲连接数 -->  
       <property name = "minIdle" value = "${jdbc.minIdle}" />    
	</bean>
	
	<!--配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置entity包,也就是实体类包，自动扫描,用于别名配置-->
        <property name="typeAliasesPackage" value="com.shu.seckill.entity"/>
        <!--配置需要扫描的mapper.xml文件-->
        <property name="mapperLocations" value="classpath*:sqlMap/*.xml"/>
    </bean>
    
    <!--配置mapper接口包,动态实现mapper接口，注入到Spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory,请注意不要使用sqlSessionFactoryBean，否则会出现注入异常-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出要扫描的mapper接口-->
        <property name="basePackage" value="com.shu.seckill.dao" />
    </bean>
    <!--事务管理-->  
    <bean id="transactionManager"  
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <!--注入dataSource-->  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    <!--开启事务注解扫描-->  
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven> 
    
     <!--注入redisDao-->
    <bean id="redisDao" class="com.shu.seckill.redis.RedisDao">
        <!--构造方法注入值-->
        <!--这里的IP地址是我安装了redis的虚拟机的IP地址-->
        <!--如果redis安装在本地，请把这里的IP地址改为本地IP地址-->
        <constructor-arg index="0" value="127.0.0.1"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>
